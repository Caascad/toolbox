name: Autoupdate

on:
  push:
    branches:
      - nix_build
jobs:
  update:
    timeout-minutes: 360
    name: Update Toolbox components
    runs-on: ubuntu-latest
    outputs:
      branch_name: '${{ steps.branch.outputs.branch }}'
    steps:
      - uses: actions/checkout@v2
      - name: Install Nix
        uses: cachix/install-nix-action@v12
      - name: Setup binary cache
        uses: cachix/cachix-action@v8
        with:
          name: toolbox
          skipPush: true
      - name: Check for updates
        run : |
          nix-shell --command autoupdate/update.py
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - id: branch
        name: set branch name
        run: echo ::set-output name=branch::autoupdate-$(date '+%d-%m-%y')
      - name: push if updated
        run: |
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email "action@github.com"
          if [ `git status --porcelain=v2 | wc -l` -ne 0 ]; then
            echo "Changes detected ! Creating pull request..."
            git fetch --all
            for branch in `git branch --list -a "*autoupdate-*" | awk -F'/' '{if($3 != "") print $3}'`;do
              git push origin --delete ${branch} -q
            done
            git checkout -b $BRANCH_NAME -q

            git add -A
            git commit -m "autoupdate: $(date '+%d-%m-%y')" -q
            mv changes.md changes_wip.md
            git add changes_wip.md
            git commit -m "add update changelog"
            git push origin $BRANCH_NAME
          else
            exit 1
          fi
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          BRANCH_NAME: '${{ steps.branch.outputs.branch }}'
  build:
    needs:
      - update
    timeout-minutes: 360
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: '${{needs.update.outputs.branch_name}}'
      - name: Install Nix
        uses: cachix/install-nix-action@v12
      - name: Setup binary cache
        uses: cachix/cachix-action@v8
        with:
          name: toolbox
          skipPush: true
      - name: build packages
        run: |
          #nix-build
          #nix-build -A terraform-providers
  commit:
    needs:
      - build
      - update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: '${{needs.update.outputs.branch_name}}'
      - name: open pr
        run: |
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email "action@github.com"
          git reset --hard HEAD^
          git push --force
          hub pull-request -F changes_wip.md -d
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
