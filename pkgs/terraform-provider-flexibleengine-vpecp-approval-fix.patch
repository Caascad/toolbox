diff --git a/flexibleengine/resource_flexibleengine_vpcep_approval.go b/flexibleengine/resource_flexibleengine_vpcep_approval.go
index fbc84722..84d62687 100644
--- a/flexibleengine/resource_flexibleengine_vpcep_approval.go
+++ b/flexibleengine/resource_flexibleengine_vpcep_approval.go
@@ -194,7 +194,7 @@ func doConnectionAction(d *schema.ResourceData, client *golangsdk.ServiceClient,
 		stateConf := &resource.StateChangeConf{
 			Pending:    []string{"creating", "pendingAcceptance"},
 			Target:     []string{targetStatus},
-			Refresh:    waitForVPCEndpointStatus(client, epID),
+			Refresh:    waitForVPCEndpointConnected(client, serviceID, epID),
 			Timeout:    d.Timeout(schema.TimeoutCreate),
 			Delay:      3 * time.Second,
 			MinTimeout: 3 * time.Second,
@@ -210,3 +210,22 @@ func doConnectionAction(d *schema.ResourceData, client *golangsdk.ServiceClient,
 
 	return nil
 }
+
+func waitForVPCEndpointConnected(vpcepClient *golangsdk.ServiceClient, serviceId, endpointId string) resource.StateRefreshFunc {
+	return func() (interface{}, string, error) {
+		listOpts := services.ListConnOpts{
+			EndpointID: endpointId,
+		}
+		connections, err := services.ListConnections(vpcepClient, serviceId, listOpts)
+		if err != nil {
+			if _, ok := err.(golangsdk.ErrDefault404); ok {
+				return connections, "deleted", nil
+			}
+			return connections, "error", err
+		}
+		if len(connections) == 1 && connections[0].EndpointID == endpointId {
+			return connections, connections[0].Status, nil
+		}
+		return connections, "deleted", nil
+	}
+}
